"{{{ basic settings
set nocompatible
set encoding=utf-8

filetype indent plugin on
syntax on
set mouse=a

set hidden
set wildmenu
set wildmode=longest:full,full
set wildoptions=pum
set list
set listchars=tab:▸\ ,trail:·
set showcmd
set incsearch
set hlsearch
set ignorecase
set smartcase
set backspace=indent,eol,start
set autoindent
set nostartofline
set noerrorbells visualbell t_vb=
set number
set relativenumber

set shiftwidth=4
set softtabstop=4
set expandtab
set scrolloff=8
set splitright
set splitbelow

set clipboard=unnamed
set foldmethod=marker

nnoremap <space> <nop>
let mapleader=" "

set omnifunc=ale#completion#OmniFunc
let g:airline#extensions#ale#enabled = 1
let g:ale_completion_enabled = 1
let g:ale_cpp_clangd_options = '-std=c++17 -Wall'
let g:ale_sign_error = '✗'
let g:ale_sign_warning = '⚡ '

let g:ale_linters = {'rust': ['analyzer'], 'cpp': ['clangd']}
let g:ale_fixers = {'rust': ['rustfmt'], 'cpp': ['clang-format']}
let g:rustfmt_autosave = 1
let g:ale_fix_on_save = 1
"}}}

"{{{ vim-plug
call plug#begin('~/.vim/plugged')
Plug 'sheerun/vim-polyglot'
Plug 'morhetz/gruvbox'
Plug 'dracula/vim', { 'as': 'dracula' }
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'vimwiki/vimwiki'
Plug 'tpope/vim-obsession'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-unimpaired'
Plug 'tpope/vim-eunuch'
Plug 'shumphrey/fugitive-gitlab.vim'
Plug 'ntpeters/vim-better-whitespace'
Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }
Plug 'ryanoasis/vim-devicons'
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
Plug 'junegunn/gv.vim'
Plug 'stsewd/fzf-checkout.vim'
Plug 'airblade/vim-rooter'
Plug 'mbbill/undotree'
Plug 'dbeniamine/cheat.sh-vim'
Plug 'voldikss/vim-floaterm'
Plug 'mhinz/vim-startify'
Plug 'chrisbra/Colorizer'
Plug 'liuchengxu/vim-which-key', { 'on': ['WhichKey', 'WhichKey!'] }
Plug 'vim-utils/vim-man'
Plug 'kergoth/vim-bitbake'
Plug 'dense-analysis/ale'
Plug 'rust-lang/rust.vim'
Plug 'SirVer/ultisnips'
Plug 'honza/vim-snippets'
call plug#end()
"}}}

"{{{ colorscheme
colorscheme gruvbox
set background=dark
hi Normal guibg=NONE ctermbg=NONE
"}}}

"{{{ vim-airline
let g:airline_theme='bubblegum'
let g:airline_powerline_fonts = 1
let g:airline_skip_empty_sections = 1
if !exists('g:airline_symbols')
    let g:airline_symbols = {}
endif
" unicode symbols
let g:airline_left_sep = '»'
let g:airline_left_sep = '▶'
let g:airline_right_sep = '«'
let g:airline_right_sep = '◀'
let g:airline_symbols.linenr = '␊'
let g:airline_symbols.linenr = '␤'
let g:airline_symbols.linenr = '¶'
let g:airline_symbols.branch = '⎇'
let g:airline_symbols.paste = 'ρ'
let g:airline_symbols.paste = 'Þ'
let g:airline_symbols.paste = '∥'
let g:airline_symbols.whitespace = 'Ξ'
" airline symbols
let g:airline_left_sep = ''
let g:airline_left_alt_sep = ''
let g:airline_right_sep = ''
let g:airline_right_alt_sep = ''
let g:airline_symbols.branch = ''
let g:airline_symbols.readonly = ''
let g:airline_symbols.linenr = ''
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#buffer_nr_show = 1
"}}}

"{{{ other plugins settings

let g:vimwiki_list = [{'path': '~/vimwiki/', 'syntax': 'markdown', 'ext': '.md'}]
let g:is_posix = 1
let g:fugitive_gitlab_domains = {'ssh://git.ci.motional.com': 'https://gitlab.ci.motional.com'}

" netrw
let g:netrw_banner = 0
let g:netrw_liststyle = 3
let g:netrw_sort_sequence = '[\/]$,*'
let g:netrw_browse_split = 4

" NERDTree
let NERDTreeMinimalUI = 1
let NERDTreeShowHidden=1

" Floaterm
let g:floaterm_keymap_new    = '<F7>'
let g:floaterm_keymap_prev   = '<F8>'
let g:floaterm_keymap_next   = '<F9>'
let g:floaterm_keymap_toggle = '<F12>'
let g:floaterm_autoclose = 1

let g:startify_bookmarks = [
            \ { 'v': '~/.vimrc' },
            \ { 't': '~/.tmux.conf' },
            \ { 'z': '~/.zshrc' },
            \ { 'w': '~/vimwiki/index.md' },
            \ '~/repo/personal',
            \ '~/repo/agent',
            \ '~/repo/av-stack',
            \ ]

let g:startify_lists = [
      \ { 'header': ['   Bookmarks'],      'type': 'bookmarks' },
      \ { 'header': ['   MRU'],            'type': 'files' },
      \ { 'header': ['   MRU '. getcwd()], 'type': 'dir' },
      \ ]

" UltiSnips
let g:UltiSnipsExpandTrigger = "<tab>"
let g:UltiSnipsJumpForwardTrigger = "<c-b>"
let g:UltiSnipsJumpBackwardTrigger = "<c-z>"
let g:UltiSnipsSnippetDirectories = ["~/.UltiSnips"]

nnoremap <silent> <leader> :WhichKey '<Space>'<CR>
"}}}

"{{{ key mappings
" Quicker window movement
nnoremap <leader>j <C-w>j
nnoremap <leader>k <C-w>k
nnoremap <leader>h <C-w>h
nnoremap <leader>l <C-w>l
nnoremap <leader>wf :w!<cr>
nnoremap <leader>q :bd<cr>
nnoremap <leader>wq :wq<cr>
" Vertical and horizontal splits
nnoremap <leader>vs <C-w>v
nnoremap <leader>xs <C-w>S
nnoremap <silent> <leader>+ :vertical resize +5<CR>
nnoremap <silent> <leader>- :vertical resize -5<CR>
nnoremap <S-l> :bnext<CR>
nnoremap <S-h> :bprevious<CR>
nnoremap <leader>u :bprevious<CR>
nnoremap <leader>ve :edit ~/.vimrc<cr>
tnoremap <leader><esc> <C-\><C-n>
" Keep it centered
nnoremap n nzzzv
nnoremap N Nzzzv
nnoremap J mzJ`z
vnoremap < <gv
vnoremap > >gv
vnoremap p "_dP
vnoremap y myy`y
vnoremap Y myY`y
nnoremap Y y$
nnoremap <leader>xo :!xdg-open %<cr><cr>
nnoremap <C-a> <esc>ggVG
imap jk <esc>
imap ;; <esc>A;<esc>
nmap <silent> gf :edit <cfile><cr>
nmap <leader>Q :FloatermKill!<cr>:bufdo bdelete<cr>:qa<cr>
imap <F3> <esc>:w<cr>:FloatermNew --autoclose=0 --position=bottom --height=0.4 --width=0.9 compile-and-run %<cr>
nmap <F3> <esc>:w<cr>:FloatermNew --autoclose=0 --position=bottom --height=0.4 --width=0.9 compile-and-run %<cr>
nnoremap <leader>nt :NERDTreeToggle %<CR>
nmap <silent> <leader><cr> :noh<cr>
nnoremap <leader>f :GFiles<CR>
nnoremap <leader>b :Buffers<cr>
nnoremap <leader>l :BLines<cr>
nnoremap <leader>rg :Rg<cr>
nnoremap <leader>gb :GBranches<cr>
nmap <F2> :Maps<cr>
cnoremap w!! w !sudo tee > /dev/null %

" vim-repeat
silent! call repeat#set("\<Plug>MyWonderfulMap", v:count)
"}}}

